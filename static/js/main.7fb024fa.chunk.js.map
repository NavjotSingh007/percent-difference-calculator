{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","lowerNumber","setLowerNumber","higherNumber","setHigherNumber","percentDifference","setPercentDifference","showInputFieldChangeByAppInUI","inputFieldId","secondsToWait","htmlElement","document","getElementById","inputFieldChangeByAppCssClass","classList","add","Promise","resolve","setTimeout","then","remove","className","class","for","type","id","value","onInput","event","target","higherNumberTemp","percentDifferenceTemp","Number","lowerNumberTemp","percentDiffTemp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8OA0GeA,MAvGf,WAAgB,IAAD,EACyBC,mBAAS,GADlC,mBACNC,EADM,KACOC,EADP,OAE2BF,mBAAS,GAFpC,mBAENG,EAFM,KAEQC,EAFR,OAGqCJ,mBAAS,GAH9C,mBAGNK,EAHM,KAGaC,EAHb,KAaPC,EAAgC,SAACC,GACrC,IATsBC,EASlBC,EAAcC,SAASC,eAAeJ,GACpCK,EAAgC,wBAEtCH,EAAYI,UAAUC,IAAIF,IAZJJ,EAaP,GAZR,IAAIO,SAAQ,SAACC,GAClBC,YAAW,WACTD,GAAQ,KACS,IAAhBR,OASeU,MAAK,WACvBT,EAAYI,UAAUM,OAAOP,OAkCjC,OACE,sBAAKQ,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,yCACA,8BACE,iCACA,sBAAKC,MAAM,OAAX,UACI,uBAAOC,IAAI,eAAeD,MAAM,aAAhC,2BAGA,uBACEE,KAAK,SACLF,MAAM,eACNG,GAAG,eACHC,MAAOvB,EACPwB,QAnCyB,SAACC,GACpCxB,EAAgBwB,EAAMC,OAAOH,OAC7B,IAAII,EAAmBF,EAAMC,OAAOH,MAEhCK,GACAC,OAAOF,GAAoBE,OAAO/B,IAAgB+B,OAAO/B,GAAgB,IAE3EM,EAA8B,qBAChCD,EAAqByB,SA8Bf,sBAAKT,MAAM,OAAX,UACE,uBAAOC,IAAI,cAAcD,MAAM,aAA/B,0BAGA,uBACEE,KAAK,SACLF,MAAM,eACNG,GAAG,cACHC,MAAOzB,EACP0B,QAxDwB,SAACC,GACnC1B,EAAe0B,EAAMC,OAAOH,OAC5B,IAAIO,EAAkBL,EAAMC,OAAOH,MAC/BK,GACAC,OAAO7B,GAAgB6B,OAAOC,IAAoBD,OAAOC,GAAoB,IAEjF1B,EAA8B,qBAC9BD,EAAqByB,SAoDf,sBAAKT,MAAM,OAAX,UACE,uBAAOC,IAAI,oBAAoBD,MAAM,aAArC,gCAGA,sBAAKD,UAAU,mBAAf,UACE,uBACEG,KAAK,SACLF,MAAM,eACNG,GAAG,oBACHC,MAAOrB,EACPsB,QAlD4B,SAACC,GACzCtB,EAAqBsB,EAAMC,OAAOH,OAElC,IAAIQ,EAAkBN,EAAMC,OAAOH,MAE/BI,EAAqBE,OAAOE,GAAiB,IAAOF,OAAO/B,GAAgB+B,OAAO/B,GAEtFG,EAAgB0B,GAChBvB,EAA8B,mBA4CpB,sBAAMe,MAAM,mBAAZ,8BCrFCa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BuB,K","file":"static/js/main.7fb024fa.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [lowerNumber, setLowerNumber] = useState(0);\n  const [higherNumber, setHigherNumber] = useState(0);\n  const [percentDifference, setPercentDifference] = useState(0);\n\n  const waitForSeconds = (secondsToWait) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(true);\n      }, secondsToWait * 1000);\n    });\n  };\n\n  const showInputFieldChangeByAppInUI = (inputFieldId) => {\n    let htmlElement = document.getElementById(inputFieldId);\n    const inputFieldChangeByAppCssClass = \"inputFieldChangeByApp\";\n\n    htmlElement.classList.add(inputFieldChangeByAppCssClass);\n    waitForSeconds(0.7).then(() => {\n      htmlElement.classList.remove(inputFieldChangeByAppCssClass);\n    });\n  };\n\n  const handleLowerNumberInputEvent = (event) => {\n    setLowerNumber(event.target.value);\n    let lowerNumberTemp = event.target.value;\n    let percentDifferenceTemp =\n      ((Number(higherNumber) - Number(lowerNumberTemp)) / Number(lowerNumberTemp)) * 100;\n\n    showInputFieldChangeByAppInUI(\"percentDifference\");\n    setPercentDifference(percentDifferenceTemp);\n  };\n  const handleHigherNumberInputEvent = (event) => {\n    setHigherNumber(event.target.value);\n    let higherNumberTemp = event.target.value;\n\n    let percentDifferenceTemp =\n      ((Number(higherNumberTemp) - Number(lowerNumber)) / Number(lowerNumber)) * 100;\n\n      showInputFieldChangeByAppInUI(\"percentDifference\");\n    setPercentDifference(percentDifferenceTemp);\n  };\n  const handlePercentDifferenceInputEvent = (event) => {\n    setPercentDifference(event.target.value);\n\n    let percentDiffTemp = event.target.value;\n\n    let higherNumberTemp = ((Number(percentDiffTemp)/100) * Number(lowerNumber)) + Number(lowerNumber);\n\n    setHigherNumber(higherNumberTemp);\n    showInputFieldChangeByAppInUI(\"higherNumber\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-Heading\">Percent Increase Calculator</h1>\n      <div>\n        <form>\n        <div class=\"mb-3\">\n            <label for=\"higherNumber\" class=\"form-label\">\n              Higher number\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"higherNumber\"\n              value={higherNumber}\n              onInput={handleHigherNumberInputEvent}\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"lowerNumber\" class=\"form-label\">\n              Lower number\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"lowerNumber\"\n              value={lowerNumber}\n              onInput={handleLowerNumberInputEvent}\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"percentDifference\" class=\"form-label\">\n              Percent difference\n            </label>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"percentDifference\"\n                value={percentDifference}\n                onInput={handlePercentDifferenceInputEvent}\n              />\n              <span class=\"input-group-text\">%</span>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}